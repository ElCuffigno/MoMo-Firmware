import os
import utilities

def build_exec_for_chip(chip, define):
	"""
	Configure Scons to build the MIB12 Executive for the 8bit pic microchip indicated in the arguments.
	"""

	builddir = os.path.join('build', chip)
	VariantDir(builddir, 'src', duplicate=0)

	env = Environment(tools=['xc8_compiler', 'patch_mib12', 'xc8_symbols'], ENV = os.environ)
	env.AppendENVPath('PATH','../../tools/scripts')
	env['CHIP'] = chip
	env['CHIPDEFINE'] = define
	
	#Load in all of the xc8 configuration from build_settings
	mib12conf = utilities.MIB12Config()
	mib12conf.config_env_for_exec(env)

	Export('env')
	SConscript(os.path.join(builddir, 'SConscript'))

	return os.path.join(builddir, 'mib12_executive_patched.hex')

exec16 = build_exec_for_chip('16F1823', '__PIC16LF1823__')
exec12 = build_exec_for_chip('12F1822', '__PIC12LF1822__')

env = Environment()

env.InstallAs(os.path.join('build', 'output', 'mib12_executive_16lf1823.hex'), exec16)
env.InstallAs(os.path.join('build', 'output', 'mib12_executive_12lf1822.hex'), exec12)
